
import discord

from discord.ext import commands

from discord.ext.commands import bot

import asyncio

from itertools import cycle

import time

import youtube_dl


my_token = '549038522040844309'


client = commands.Bot(command_prefix = '>')


client.remove_command('help')

status = ['>help for commands', 'Create : Tourbilion', "Subcribe : Tourbilion Gtprivate"]



players = {}




async def change_status():

    await client.wait_until_ready()

    msgs = cycle(status)



    while not client.is_closed:

        current_status = next(msgs)

        await client.change_presence(game=discord.Game(name =current_status))

        await asyncio.sleep(6000)



@client.event

async def on_ready():

    print('The bot is online and is connected to discord')




@client.event

async def on_member_join(member):

    role = discord.utils.get(member.server.roles, name='Member')

    await client.add_roles(member, role)





@client.event

async def on_message(message):

    

    await client.process_commands(message)

    if message.content.startswith('Sup dude'):

        userID = message.author.id

        await client.send_message(message.channel, '<@%s> sup' % (userID))



@client.command(pass_context =True)

async def help(ctx):

    author = ctx.message.author

    embed = discord.Embed(Colour = discord.Colour.orange())

    embed.set_author(name = 'Help Commands')

    embed.add_field(name ='>say', value ='Returns what the user says.', inline=False)

    embed.add_field(name ='>clear', value ='Deletes certain amount of messages, default amount is 10', inline=False)

    embed.add_field(name ='>join', value ='The bot joins the current voice channel, the user must be in a voice channel to use this comand', inline=False)

    embed.add_field(name ='>leave', value ='The bot leaves the current voice channel.', inline=False)

    embed.add_field(name ='>play', value ='Plays the audio from a youtube url', inline=False)

    embed.add_field(name ='>ping', value ='Gives the server ping', inline=False)
    embed.add_field(name ='>mute', value ='Gives the member muted', inline=False)
    embed.add_field(name ='>unmute', value ='Gives the member unmuted', inline=False) 
    embed.add_field(name ='>kick', value ='Gives the member get kick', inline=False) 
    embed.add_field(name ='>warn', value ='Gives the member get warn', inline=False) 
    embed.add_field(name ='>ban', value ='Gives the member get banned', inline=False) 
    embed.add_field(name ='>addrole', value ='Gives the member get new roles select user and roles', inline=False) 
    embed.add_field(name ='>unrole', value ='Gives the member get remove roles select user and roles', inline=False) 
    embed.add_field(name ='>userinfo', value ='Gives the user info select user', inline=False)

    embed.add_field(name ='Sup dude', value ='Subcribe : Tourbilion Gtprivate link : https://www.youtube.com/channel/UCRlNfKIVy2G0ibX830L-5IQ', inline=False)



    await client.say(author, embed=embed)




@client.command(pass_context = True)

async def clear(ctx, amount = 10):

    channel = ctx.message.channel

    messages = []

    async for message in client.logs_from(channel, limit=int(amount) +1):

        messages.append(message)

    await client.delete_messages(messages)

    await client.say(str(amount) + ' messages were deleted')





@client.command(pass_context = True)

async def join(ctx):

    channel = ctx.message.author.voice.voice_channel

    embed = discord.Embed(

        title = 'Voice channel',

        description = 'commands for the voice channel.',

        colour = discord.Colour.blue()

    )



    embed.add_field(name = '>play', value = 'play youtube audio with url', inline = False)

    embed.add_field(name = '>pause', value = 'pauses audio', inline = False)

    embed.add_field(name = '>resume', value = 'resumes audio', inline = False)

    embed.add_field(name = '>leave', value = 'leave voice channel', inline = False)



    await client.say(embed=embed)

    await client.join_voice_channel(channel)





@client.command(pass_context = True)

async def leave(ctx):

    server = ctx.message.server

    voice_client = client.voice_client_in(server)

    await voice_client.disconnect()





@client.command(pass_context = True)

async def play(ctx, url):

    server = ctx.message.server

    voice_client = client.voice_client_in(server)

    player = await voice_client.create_ytdl_player(url)

    players[server.id] = player

    player.start()



@client.command(pass_context = True)

async def pause(ctx):

    id = ctx.message.server.id

    players[id].pause()



@client.command(pass_context = True)

async def resume(ctx):

    id = ctx.message.server.id

    players[id].resume()



@client.command(pass_context = True)

async def stop(ctx):

    id = ctx.message.server.id

    players[id].stop()






@client.command()

async def say(*args):

        output = ''

        for word in args:

            output += word

            output += ' '

        await client.say(output)




@client.command(pass_context=True)

async def userinfo(ctx, user: discord.Member):

    embed = discord.Embed(title="{}'s info".format(user.name), description="Here's what I could find.", color=0x00ff00)

    embed.add_field(name="Name", value=user.name, inline=True)

    embed.add_field(name="ID", value=user.id, inline=True)

    embed.add_field(name="Status", value=user.status, inline=True)

    embed.add_field(name="Highest role", value=user.top_role)

    embed.add_field(name="Joined", value=user.joined_at)

    embed.set_thumbnail(url=user.avatar_url)

    await client.say(embed=embed)
    


@client.command(pass_context=True)
async def ping():
    await client.say(':ping_pong:')
    await client.say('You Ping Me')
	
@client.command(pass_context=True)
async def mute(ctx,target:discord.Member):
    role=discord.utils.get(ctx.message.server.roles,name='Muted')
    
    await client.add_roles(target,role)
    await client.say('You Get Muted')
    
@client.command(pass_context=True)
async def unmute(ctx,target:discord.Member):
    role=discord.utils.get(ctx.message.server.roles,name='Muted')
    
    await client.remove_roles(target,role)
    await client.say('You Get unmuted')
    
@client.command(pass_context=True)
async def warn(ctx,target:discord.Member):
    await client.send_message(target,'Warning From System!!')
    await client.say('He Got Warning!')
   
@client.command(pass_context=True)
async def kick(ctx,target:discord.Member):
    await client.kick(target)
    await client.say('You Get Kick')
   
@client.command(pass_context=True)
async def ban(ctx,target:discord.Member):
    await client.ban(target)
    await client.say('You Get Banned')
    
@client.command(pass_context=True)
async def addrole(ctx,target:discord.Member,role:discord.Role):
    await client.add_roles(target, role)
    await client.say('You Get New Roles')
    
@client.command(pass_context=True)
async def unrole(ctx,target:discord.Member,role:discord.Role):
    await client.remove_roles(target, role)
    await client.say('You Get Remove Roles')
    

client.loop.create_task(change_status())

client.run('NTQ5MDM4NTIyMDQwODQ0MzA5.D2UjVA.qE0lj9F1PFA_zgBGUpyX0o-vF4M')
